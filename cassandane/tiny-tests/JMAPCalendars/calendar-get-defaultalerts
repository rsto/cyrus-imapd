#!perl
use Cassandane::Tiny;

sub test_calendar_get_defaultalerts
    :min_version_3_7 :needs_component_jmap
{
    my ($self) = @_;

    my $jmap = $self->{jmap};
    my $CalDAV = $self->{caldav};

    # Set alerts via CalDAV.
    my $proppatchXml = <<EOF;
<?xml version="1.0" encoding="UTF-8"?>
<D:propertyupdate xmlns:D="DAV:" xmlns:C="urn:ietf:params:xml:ns:caldav">
  <D:set>
    <D:prop>
<C:default-alarm-vevent-datetime>
BEGIN:VALARM
UID:c5f1c439-d18d-4c98-89e1-211ccf752dec
TRIGGER:-PT5M
ACTION:DISPLAY
DESCRIPTION:alarmTime1
END:VALARM
BEGIN:VALARM
UID:37859148-2801-45bf-bdb8-528d5704788c
TRIGGER:PT0M
ACTION:DISPLAY
DESCRIPTION:alarmTime2
END:VALARM
</C:default-alarm-vevent-datetime>
    </D:prop>
  </D:set>
  <D:set>
    <D:prop>
<C:default-alarm-vevent-date>
BEGIN:VALARM
UID:bc0c8431-503e-427a-bb2d-6a1e2fca2d3f
TRIGGER:PT0S
ACTION:DISPLAY
DESCRIPTION:alarmDate1
END:VALARM
</C:default-alarm-vevent-date>
    </D:prop>
  </D:set>
</D:propertyupdate>
EOF
    $CalDAV->Request('PROPPATCH', "/dav/calendars/user/cassandane/Default",
        $proppatchXml, 'Content-Type' => 'text/xml');

    my $res = $jmap->CallMethods([
        ['Calendar/get', {
            ids => ['Default'],
            properties => ['defaultAlertsWithTime', 'defaultAlertsWithoutTime'],
        }, 'R1']
    ]);
    $self->assert_deep_equals({
        'c5f1c439-d18d-4c98-89e1-211ccf752dec' => {
            '@type' => 'Alert',
            uid => 'c5f1c439-d18d-4c98-89e1-211ccf752dec',
            trigger => {
                '@type' => 'OffsetTrigger',
                relativeTo => 'start',
                offset => '-PT5M',
            },
            action => 'display',
        },
        '37859148-2801-45bf-bdb8-528d5704788c' => {
            '@type' => 'Alert',
            uid => '37859148-2801-45bf-bdb8-528d5704788c',
            trigger => {
                '@type' => 'OffsetTrigger',
                relativeTo => 'start',
                offset => 'PT0S',
            },
            action => 'display',
        }
    }, $res->[0][1]{list}[0]{defaultAlertsWithTime});

    $self->assert_deep_equals({
        'bc0c8431-503e-427a-bb2d-6a1e2fca2d3f' => {
            '@type' => 'Alert',
            uid => 'bc0c8431-503e-427a-bb2d-6a1e2fca2d3f',
            trigger => {
                '@type' => 'OffsetTrigger',
                relativeTo => 'start',
                offset => 'PT0S',
            },
            action => 'display',
        },
    }, $res->[0][1]{list}[0]{defaultAlertsWithoutTime});
}
